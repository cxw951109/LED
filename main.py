# -*- coding: utf-8 -*-
#
# Form implementation generated from reading ui file 'hello.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import re
import sys
import time
import json
import threading
from config import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWebChannel import QWebChannel
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5.QtWidgets import QApplication, QWidget,QStackedLayout
from fastapi import FastAPI
from collections import defaultdict

app = FastAPI()

class A(object):
    def setupUi(self, Form):
        self.gridLayout_3 = QtWidgets.QGridLayout(Form)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setMinimumSize(QtCore.QSize(100, 50))
        self.pushButton.setMaximumSize(QtCore.QSize(100, 50))
        self.pushButton.setObjectName("Page0")
        self.pushButton.setStyleSheet("QPushButton\n"
                                      "{\n"
                                      "    font: 12pt \'幼圆\'; \n"
                                      "    color:black;\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed\n"
                                      "{\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    color:black;\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "    padding-left:6px;\n"
                                      "    padding-top:6px;\n"
                                      "}\n"
                                      "\n"
                                      "")
        self.gridLayout_2.addWidget(self.pushButton, 2, 2, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.lineEdit_7 = QtWidgets.QLineEdit(Form)
        self.lineEdit_7.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_7.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_7.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_7, 3, 4, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 2, 2, 1, 1)
        self.lineEdit_10 = QtWidgets.QLineEdit(Form)
        self.lineEdit_10.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_10.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_10.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_10, 5, 1, 1, 1)
        self.lineEdit_9 = QtWidgets.QLineEdit(Form)
        self.lineEdit_9.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_9.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_9.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_9, 4, 4, 1, 1)
        self.label_29 = QtWidgets.QLabel(Form)
        self.label_29.setMinimumSize(QtCore.QSize(0, 70))
        self.label_29.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_29, 5, 0, 1, 1)
        self.lineEdit_5 = QtWidgets.QLineEdit(Form)
        self.lineEdit_5.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_5.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_5.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_5, 2, 4, 1, 1)
        self.lineEdit_6 = QtWidgets.QLineEdit(Form)
        self.lineEdit_6.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_6.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_6.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_6, 3, 1, 1, 1)
        self.label_26 = QtWidgets.QLabel(Form)
        self.label_26.setMinimumSize(QtCore.QSize(0, 70))
        self.label_26.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_26, 3, 3, 1, 1)
        self.label_20 = QtWidgets.QLabel(Form)
        self.label_20.setMinimumSize(QtCore.QSize(0, 70))
        self.label_20.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_20, 2, 3, 1, 1)
        self.lineEdit_8 = QtWidgets.QLineEdit(Form)
        self.lineEdit_8.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_8.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_8.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_8, 4, 1, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(Form)
        self.lineEdit_2.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_2.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_2.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_2, 1, 1, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(Form)
        self.lineEdit_3.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_3.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_3.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_3, 1, 4, 1, 1)
        self.label_28 = QtWidgets.QLabel(Form)
        self.label_28.setMinimumSize(QtCore.QSize(0, 70))
        self.label_28.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_28, 4, 3, 1, 1)
        self.label_25 = QtWidgets.QLabel(Form)
        self.label_25.setMinimumSize(QtCore.QSize(0, 70))
        self.label_25.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_25, 3, 0, 1, 1)
        self.lineEdit_0 = QtWidgets.QLineEdit(Form)
        self.lineEdit_0.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_0.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_0.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_0, 0, 1, 1, 1)
        self.label_19 = QtWidgets.QLabel(Form)
        self.label_19.setMinimumSize(QtCore.QSize(0, 70))
        self.label_19.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_19, 2, 0, 1, 1)
        self.comboBox = QtWidgets.QComboBox(Form)
        self.comboBox.setStyleSheet("font: 10pt '幼圆'; \n")
        self.comboBox.setMinimumSize(QtCore.QSize(0, 50))
        self.comboBox.setMaximumSize(QtCore.QSize(16777215, 50))
        self.comboBox.addItem("请选择型号")
        self.comboBox.addItem("large")
        self.comboBox.addItem("small")
        self.gridLayout.addWidget(self.comboBox, 5, 4, 1, 1)
        self.label_24 = QtWidgets.QLabel(Form)
        self.label_24.setMinimumSize(QtCore.QSize(0, 70))
        self.label_24.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_24, 1, 3, 1, 1)
        self.label_23 = QtWidgets.QLabel(Form)
        self.label_23.setMinimumSize(QtCore.QSize(70, 70))
        self.label_23.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_23, 0, 3, 1, 1)
        self.label_30 = QtWidgets.QLabel(Form)
        self.label_30.setMinimumSize(QtCore.QSize(0, 70))
        self.label_30.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_30, 5, 3, 1, 1)
        self.label_21 = QtWidgets.QLabel(Form)
        self.label_21.setMinimumSize(QtCore.QSize(0, 70))
        self.label_21.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_21, 1, 0, 1, 1)
        self.lineEdit_1 = QtWidgets.QLineEdit(Form)
        self.lineEdit_1.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_1.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_1.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_1, 0, 4, 1, 1)
        self.lineEdit_4 = QtWidgets.QLineEdit(Form)
        self.lineEdit_4.setMinimumSize(QtCore.QSize(0, 50))
        self.lineEdit_4.setMaximumSize(QtCore.QSize(16777215, 50))
        self.lineEdit_4.setStyleSheet("border: 1px solid #696969;border-radius: 10px;font: 12pt '幼圆'")
        self.gridLayout.addWidget(self.lineEdit_4, 2, 1, 1, 1)
        self.label_22 = QtWidgets.QLabel(Form)
        self.label_22.setMinimumSize(QtCore.QSize(70, 70))
        self.label_22.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_22, 0, 0, 1, 1)
        self.label_27 = QtWidgets.QLabel(Form)
        self.label_27.setMinimumSize(QtCore.QSize(0, 70))
        self.label_27.setMaximumSize(QtCore.QSize(16777215, 70))
        self.gridLayout.addWidget(self.label_27, 4, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 48, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem1, 6, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 3)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem2, 2, 1, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_2, 0, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.gridLayout_3.addLayout(self.horizontalLayout, 1, 0, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.pushButton.setText(_translate("Form", "下一步"))
        self.label_29.setText(_translate("Form", "列中间据："))
        self.label_26.setText(_translate("Form", "列间距："))
        self.label_20.setText(_translate("Form", "单粒宽："))
        self.label_28.setText(_translate("Form", "上边距："))
        self.label_25.setText(_translate("Form", "行间距："))
        self.label_19.setText(_translate("Form", "单粒高："))
        self.label_24.setText(_translate("Form", "列数："))
        self.label_23.setText(_translate("Form", "备注："))
        self.label_30.setText(_translate("Form", "料盒规格："))
        self.label_21.setText(_translate("Form", "行数:"))
        self.label_22.setText(_translate("Form", "型号："))
        self.label_27.setText(_translate("Form", "左边距："))
        self.label_19.setStyleSheet("font: 9pt '幼圆'")
        self.label_20.setStyleSheet("font: 9pt '幼圆'")
        self.label_21.setStyleSheet("font: 9pt '幼圆'")
        self.label_22.setStyleSheet("font: 9pt '幼圆'")
        self.label_23.setStyleSheet("font: 9pt '幼圆'")
        self.label_24.setStyleSheet("font: 9pt '幼圆'")
        self.label_25.setStyleSheet("font: 9pt '幼圆'")
        self.label_26.setStyleSheet("font: 9pt '幼圆'")
        self.label_27.setStyleSheet("font: 9pt '幼圆'")
        self.label_28.setStyleSheet("font: 9pt '幼圆'")
        self.label_29.setStyleSheet("font: 9pt '幼圆'")
        self.label_30.setStyleSheet("font: 9pt '幼圆'")


class B(object):
    def setupUi(self, Form):
        self.gridLayout_2 = QtWidgets.QGridLayout(Form)
        self.gridLayout = QtWidgets.QGridLayout()
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.label = QtWidgets.QLabel(Form)
        self.label.setStyleSheet("background-color: rgb(0, 0, 0);border: 0px solid #EDEDED;border-radius: 5px")
        self.horizontalLayout.addWidget(self.label)
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setStyleSheet("background-color: rgb(0, 0, 0);border: 0px solid #EDEDED;border-radius: 5px")
        self.horizontalLayout.addWidget(self.label_2)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setStyleSheet("background-color: rgb(0, 0, 0);border: 0px solid #EDEDED;border-radius: 5px")
        self.horizontalLayout_2.addWidget(self.label_3)
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setStyleSheet("background-color: rgb(0, 0, 0);border: 0px solid #EDEDED;border-radius: 5px")
        self.horizontalLayout_2.addWidget(self.label_4)
        self.gridLayout.addLayout(self.horizontalLayout_2, 1, 0, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setObjectName("Last")
        self.pushButton.setStyleSheet("QPushButton\n"
                                      "{\n"
                                      "    font: 12pt \'幼圆\'; \n"
                                      "    color:black;\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed\n"
                                      "{\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    color:black;\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "    padding-left:6px;\n"
                                      "    padding-top:6px;\n"
                                      "}\n"
                                      "\n"
                                      "")
        self.pushButton.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton.setMaximumSize(QtCore.QSize(16777215, 50))
        self.horizontalLayout_3.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(Form)
        self.pushButton_2.setObjectName("Again")
        self.pushButton_2.setStyleSheet("QPushButton\n"
                                      "{\n"
                                      "    font: 12pt \'幼圆\'; \n"
                                      "    color:black;\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed\n"
                                      "{\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    color:black;\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "    padding-left:6px;\n"
                                      "    padding-top:6px;\n"
                                      "}\n"
                                      "\n"
                                      "")
        self.pushButton_2.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton_2.setMaximumSize(QtCore.QSize(16777215, 50))
        self.horizontalLayout_3.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(Form)
        self.pushButton_3.setObjectName("Next")
        self.pushButton_3.setStyleSheet("QPushButton\n"
                                      "{\n"
                                      "    font: 12pt \'幼圆\'; \n"
                                      "    color:black;\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed\n"
                                      "{\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    color:black;\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "    padding-left:6px;\n"
                                      "    padding-top:6px;\n"
                                      "}\n"
                                      "\n"
                                      "")
        self.pushButton_3.setMinimumSize(QtCore.QSize(0, 50))
        self.pushButton_3.setMaximumSize(QtCore.QSize(16777215, 50))
        self.horizontalLayout_3.addWidget(self.pushButton_3)
        self.gridLayout.addLayout(self.horizontalLayout_3, 2, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton.setText(_translate("Form", "上一步"))
        self.pushButton_2.setText(_translate("Form", "重新扫描"))
        self.pushButton_3.setText(_translate("Form", "下一步"))


class Worker(QThread, QObject):
    breakSignal = pyqtSignal(list)

    def __init__(self,tag =None):
        QObject.__init__(self)
        super(Worker, self).__init__()
        self.Flag = True
        self.tag =tag
        self.start_date =''
        self.end_date =''
        self.data =''

    def run(self):
        while (True):
            if (not self.Flag):
                break
            else:
                print('thread'+str(self.tag)+' is running')
                if self.tag ==3:
                    result = chart1(self.data)
                    result1 = chart2(self.data,self.start_date,self.end_date)
                    series = [result, result1]
                    self.breakSignal.emit(series)
                    time.sleep(5)

    def setFlag(self, parm):
        self.Flag = parm


class TabBar(QtWidgets.QTabBar):
    def tabSizeHint(self, index):
        s = QtWidgets.QTabBar.tabSizeHint(self, index)
        s.transpose()
        return s

    def paintEvent(self, event):
        painter = QtWidgets.QStylePainter(self)
        opt = QtWidgets.QStyleOptionTab()

        for i in range(self.count()):
            self.initStyleOption(opt, i)
            painter.drawControl(QtWidgets.QStyle.CE_TabBarTabShape, opt)
            painter.save()

            s = opt.rect.size()
            s.transpose()
            r = QtCore.QRect(QtCore.QPoint(), s)
            r.moveCenter(opt.rect.center())
            opt.rect = r

            c = self.tabRect(i).center()
            painter.translate(c)
            painter.rotate(90)
            painter.translate(-c)
            painter.drawControl(QtWidgets.QStyle.CE_TabBarTabLabel, opt);
            painter.restore()


class TabWidget(QtWidgets.QTabWidget):
    def __init__(self, *args, **kwargs):
        QtWidgets.QTabWidget.__init__(self, *args, **kwargs)
        self.setTabBar(TabBar(self))
        self.setTabPosition(QtWidgets.QTabWidget.West)
        self.setStyleSheet(
            "QTabBar::tab {height:170px;font: 14pt '幼圆'}\n"
            "QTabBar::tab {width:110px} \n"
        )


class FramePage1(QWidget, A):
    def __init__(self):
        super().__init__()
        self.setupUi(self)


class FramePage2(QWidget, B):
    def __init__(self):
        super().__init__()
        self.setupUi(self)


class Print(QObject):
    changeList = pyqtSignal(list)

    @pyqtSlot(list, result=list)
    def print(self, content):
        self.changeList.emit(content)
        return content


class Print1(QObject):
    changeList1 = pyqtSignal(str)

    @pyqtSlot(str, result=str)
    def print(self, content):
        self.changeList1.emit(content)
        return content


class Print2(QObject):
    changeList2 = pyqtSignal(list)

    @pyqtSlot(list, result=list)
    def print(self, content):
        self.changeList2.emit(content)
        return content


class Ui_Form(QWidget):
    t1 = Worker(tag=3)
    timer = QTimer()
    def __init__(self):
        super().__init__()
        self.Start =False
        self.message = ['', '', '', '', '', '', '', '', '', '', '', '']
        self.setupUi()
        self.qsl = QStackedLayout(self.frame)
        # 实例化分页面
        self.Page1 = FramePage1()
        self.Page2 = FramePage2()
        # 加入到布局中
        self.qsl.addWidget(self.Page1)
        self.qsl.addWidget(self.Page2)
        # 控制函数
        self.controller()

    def controller(self):
        self.Page1.pushButton.clicked.connect(self.switch)
        self.Page2.pushButton.clicked.connect(self.switch)
        self.Page2.pushButton_2.clicked.connect(self.switch)
        self.Page2.pushButton_3.clicked.connect(self.switch)

    def switch(self):
        sender = self.sender().objectName()
        index = {
            "Page0": 1,
            "Last": 0,
            "Again": 1,
            "Next": 0,
        }
        if sender == "Page0":
            self.remarks =self.Page1.lineEdit_1.text()
            self.wide =self.Page1.lineEdit_5.text()
            self.columns =self.Page1.lineEdit_3.text()
            self.high =self.Page1.lineEdit_4.text()
            self.rows =self.Page1.lineEdit_2.text()
            self.name =self.Page1.lineEdit_0.text()
            self.rspace =self.Page1.lineEdit_6.text()
            self.cspace = self.Page1.lineEdit_7.text()
            self.lspace = self.Page1.lineEdit_8.text()
            self.tspace = self.Page1.lineEdit_9.text()
            self.mspace = self.Page1.lineEdit_10.text()
            self.size = self.Page1.comboBox.currentText()
            if self.wide and self.high and self.columns and self.rows and self.name and self.rspace and self.cspace and self.lspace and self.tspace and self.mspace and self.size !="请选择型号":
                value = re.compile(r'^[-+]?[0-9]+\.[0-9]+$')
                m =value.match(self.wide)
                n = value.match(self.high)
                o =value.match(self.rspace)
                p = value.match(self.cspace)
                q =value.match(self.lspace)
                s = value.match(self.tspace)
                u =value.match(self.mspace)
                r = self.rows.isdigit()
                f =self.columns.isdigit()
                if not m:
                    m = self.wide.isdigit()
                if not n:
                    n = self.high.isdigit()
                if not o:
                    o = self.rspace.isdigit()
                if not p:
                    p = self.cspace.isdigit()
                if not q:
                    q = self.lspace.isdigit()
                if not s:
                    s = self.tspace.isdigit()
                if not u:
                    u = self.mspace.isdigit()
                if m and n and r and f and o and p and q and s and u:
                    res = session.query(Standard.name).filter(Standard.flag != 2,Standard.name == self.name).all()
                    if res == []:
                        reply = QMessageBox.information(self, '信息', '确认标准件放置!',
                                                        QMessageBox.Yes | QMessageBox.No)
                        if reply == QMessageBox.Yes:
                            self.message[0] = self.name
                            self.message[2] = self.rows
                            self.message[3] = self.columns
                            self.message[5] = self.wide
                            self.message[4] = self.high
                            self.message[1] = self.remarks
                            self.message[6] = self.rspace
                            self.message[7] = self.cspace
                            self.message[8] = self.lspace
                            self.message[9] = self.tspace
                            self.message[10] = self.mspace
                            self.message[11] = self.size
                            self.Page1.lineEdit_0.clear()
                            self.Page1.lineEdit_1.clear()
                            self.Page1.lineEdit_2.clear()
                            self.Page1.lineEdit_3.clear()
                            self.Page1.lineEdit_4.clear()
                            self.Page1.lineEdit_5.clear()
                            self.Page1.lineEdit_6.clear()
                            self.Page1.lineEdit_7.clear()
                            self.Page1.lineEdit_8.clear()
                            self.Page1.lineEdit_9.clear()
                            self.Page1.lineEdit_10.clear()
                            self.Page1.comboBox.setCurrentIndex(0)
                            self.qsl.setCurrentIndex(index[sender])
                    else:
                        reply = QMessageBox.information(self, '信息', '模板名称重复!',
                                                        QMessageBox.Yes | QMessageBox.No)
                else:
                    reply = QMessageBox.information(self, '信息', '数据不符!',
                                                    QMessageBox.Yes | QMessageBox.No)
            else:
                reply = QMessageBox.information(self, '信息', '数据未填完整!',
                                                QMessageBox.Yes | QMessageBox.No)
        elif sender == "Next":
            reply = QMessageBox.information(self, '信息', '录入成功！',
                                            QMessageBox.Yes | QMessageBox.No)
            if reply == QMessageBox.Yes:
                t = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
                session.add(Standard(name=self.message[0], rows=self.message[2], columns=self.message[3],
                               wide=self.message[5], high=self.message[4], remarks=self.message[1],rspace=self.message[6], cspace=self.message[7], lspace=self.message[8],
                               tspace=self.message[9], mspace=self.message[10], size=self.message[11],url1='',url2='',
                               url3='',url4='',created_time=t,
                               flag=0))
                session.commit()
                self.Page2.label.setPixmap(QPixmap(""))
                self.Page2.label_2.setPixmap(QPixmap(""))
                self.Page2.label_3.setPixmap(QPixmap(""))
                self.Page2.label_4.setPixmap(QPixmap(""))
                self.qsl.setCurrentIndex(index[sender])
        elif sender == "Last":
            self.Page2.label.setPixmap(QPixmap(""))
            self.Page2.label_2.setPixmap(QPixmap(""))
            self.Page2.label_3.setPixmap(QPixmap(""))
            self.Page2.label_4.setPixmap(QPixmap(""))
            self.qsl.setCurrentIndex(index[sender])
        else:
            reply = QMessageBox.information(self, '信息', '请确认重新录入!',
                                            QMessageBox.Yes | QMessageBox.No)
            if reply == QMessageBox.Yes:
                self.Page2.label.setPixmap(QPixmap(""))
                self.Page2.label_2.setPixmap(QPixmap(""))
                self.Page2.label_3.setPixmap(QPixmap(""))
                self.Page2.label_4.setPixmap(QPixmap(""))

    def setupUi(self):
        self.resize(1650, 950)
        self.setMinimumSize(1150, 800)
        self.gridLayout = QtWidgets.QGridLayout(self)
        self.tabWidget = TabWidget()
        self.tabWidget.currentChanged.connect(self.slot_small_tab)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.West)
        #tab1
        self.widget = QtWidgets.QWidget()
        self.gridLayout_3 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(0)
        self.label_10 = QtWidgets.QLabel(self.widget)
        self.label_10.setAlignment(Qt.AlignCenter)
        self.label_10.setPixmap(QPixmap('./icon/all.png'))
        self.label_10.setMinimumSize(QtCore.QSize(100, 150))
        self.label_10.setMaximumSize(QtCore.QSize(16777215, 150))
        self.label_10.setStyleSheet("background-color: #798ed5;\n"
                                    "border-top-left-radius:10px;\n"
                                    "border-bottom-left-radius:10px;\n"
                                    "padding:3px")
        self.horizontalLayout.addWidget(self.label_10)
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setAlignment(Qt.AlignCenter)
        self.label.setMinimumSize(QtCore.QSize(200, 150))
        self.label.setMaximumSize(QtCore.QSize(16777215, 150))
        self.label.setStyleSheet("background-color: #798ed5;\n"
                                 "border-top-right-radius:10px;\n"
                                 "border-bottom-right-radius:10px;\n"
                                 "padding:3px")
        self.horizontalLayout.addWidget(self.label)
        self.horizontalLayout_6.addLayout(self.horizontalLayout)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setSpacing(0)
        self.label_11 = QtWidgets.QLabel(self.widget)
        self.label_11.setAlignment(Qt.AlignCenter)
        self.label_11.setPixmap(QPixmap('./icon/good.png'))
        self.label_11.setMinimumSize(QtCore.QSize(100, 150))
        self.label_11.setMaximumSize(QtCore.QSize(16777215, 150))
        self.label_11.setStyleSheet("background-color:#21b5b1;\n"
                                    "border-top-left-radius:10px;\n"
                                    "border-bottom-left-radius:10px;\n"
                                    "padding:3px")
        self.horizontalLayout_4.addWidget(self.label_11)
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setAlignment(Qt.AlignCenter)
        self.label_2.setMinimumSize(QtCore.QSize(200, 150))
        self.label_2.setMaximumSize(QtCore.QSize(16777215, 150))
        self.label_2.setStyleSheet("background-color: #21b5b1;\n"
                                   "border-top-right-radius:10px;\n"
                                   "border-bottom-right-radius:10px;\n"
                                   "padding:3px")
        self.horizontalLayout_4.addWidget(self.label_2)
        self.horizontalLayout_6.addLayout(self.horizontalLayout_4)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem1)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setSpacing(0)
        self.label_12 = QtWidgets.QLabel(self.widget)
        self.label_12.setAlignment(Qt.AlignCenter)
        self.label_12.setPixmap(QPixmap('./icon/bad.png'))
        self.label_12.setMinimumSize(QtCore.QSize(100, 150))
        self.label_12.setMaximumSize(QtCore.QSize(16777215, 150))
        self.label_12.setStyleSheet("background-color: #e4686e;\n"
                                    "border-top-left-radius:10px;\n"
                                    "border-bottom-left-radius:10px;\n"
                                    "padding:3px")
        self.horizontalLayout_5.addWidget(self.label_12)
        self.label_3 = QtWidgets.QLabel(self.widget)
        self.label_3.setAlignment(Qt.AlignCenter)
        self.label_3.setMinimumSize(QtCore.QSize(200, 150))
        self.label_3.setMaximumSize(QtCore.QSize(16777215, 150))
        self.label_3.setStyleSheet("background-color:#e4686e;\n"
                                   "border-top-right-radius:10px;\n"
                                   "border-bottom-right-radius:10px;\n"
                                   "padding:3px")
        self.horizontalLayout_5.addWidget(self.label_3)
        self.horizontalLayout_6.addLayout(self.horizontalLayout_5)
        self.gridLayout_2.addLayout(self.horizontalLayout_6, 0, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout_2.addItem(spacerItem2, 1, 0, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.label_4 = QtWidgets.QLabel(self.widget)
        self.label_4.setMinimumSize(QtCore.QSize(200, 300))
        self.label_4.setStyleSheet("background-color: rgb(0, 0, 0);\n"
                                   "border: 1px solid #EDEDED;\n"
                                   ";border-radius: 10px;\n"
                                   "padding:3px")
        self.horizontalLayout_2.addWidget(self.label_4)
        self.label_5 = QtWidgets.QLabel(self.widget)
        self.label_5.setMinimumSize(QtCore.QSize(200, 300))
        self.label_5.setStyleSheet("background-color: rgb(0, 0, 0);\n"
                                   "border: 1px solid #EDEDED;\n"
                                   ";border-radius: 10px;\n"
                                   "padding:3px")
        self.horizontalLayout_2.addWidget(self.label_5)
        self.label_6 = QtWidgets.QLabel(self.widget)
        self.label_6.setMinimumSize(QtCore.QSize(200, 300))
        self.label_6.setStyleSheet("background-color: rgb(0,0,0);\n"
                                   "border: 1px solid #EDEDED;\n"
                                   ";border-radius: 10px;\n"
                                   "padding:3px")
        self.horizontalLayout_2.addWidget(self.label_6)
        self.label_7 = QtWidgets.QLabel(self.widget)
        self.label_7.setMinimumSize(QtCore.QSize(200, 300))
        self.label_7.setStyleSheet("background-color: rgb(0,0,0);\n"
                                   "border: 1px solid #EDEDED;\n"
                                   ";border-radius: 10px;\n"
                                   "padding:3px")
        self.horizontalLayout_2.addWidget(self.label_7)
        self.gridLayout_2.addLayout(self.horizontalLayout_2, 2, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.widget)
        self.label_8.setWordWrap(True)
        self.label_8.setAlignment(Qt.AlignCenter)
        self.label_8.setMinimumSize(QtCore.QSize(0, 80))
        self.label_8.setMaximumSize(QtCore.QSize(16777215, 100))
        self.label_8.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                   "border: 1px solid #EDEDED;\n"
                                   "border-radius: 10px;\n"
                                   "padding:3px;\n"
                                   "font: 8pt \"幼圆\";")
        self.gridLayout_2.addWidget(self.label_8, 3, 0, 1, 1)
        self.widget1 = QtWidgets.QWidget(self.widget)
        self.widget1.setMaximumSize(QtCore.QSize(16777215, 120))
        self.widget1.setStyleSheet("background-color: rgb(238, 255, 255);\n"
                                   "border: 1px solid #EDEDED;\n"
                                   ";border-radius: 10px;\n"
                                   "padding:3px")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.widget1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.label_10 = QtWidgets.QLabel(self.widget1)
        self.label_10.setStyleSheet("font: 16pt '幼圆';color:red; \n"
                                    "border: 0px solid #EDEDED; \n"
                                    "padding-bottom:5px;")
        self.verticalLayout.addWidget(self.label_10)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.comboBox = QtWidgets.QComboBox(self.widget1)
        self.comboBox.setStyleSheet("font: 10pt '幼圆'; \n")
        self.comboBox.setMinimumSize(QtCore.QSize(320, 40))
        self.comboBox.setMaximumSize(QtCore.QSize(360, 40))
        self.horizontalLayout_4.addWidget(self.comboBox)
        # self.pushButton_4 = QtWidgets.QPushButton(self.widget1)
        # self.pushButton_4.clicked.connect(self.change_standard)
        # self.pushButton_4.setMinimumSize(QtCore.QSize(0, 40))
        # self.pushButton_4.setStyleSheet("QPushButton\n"
        #                                 "{\n"
        #                                 "    font: 8pt \'幼圆\'; \n"
        #                                 "    color:black;\n"
        #                                 "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
        #                                 "    border:2px solid white;border-radius:5px;\n"
        #                                 "\n"
        #                                 "}\n"
        #                                 "\n"
        #                                 "QPushButton:pressed\n"
        #                                 "{\n"
        #                                 "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
        #                                 "    color:black;\n"
        #                                 "    border:2px solid white;border-radius:5px;\n"
        #                                 "    padding-left:2px;\n"
        #                                 "    padding-top:2px;\n"
        #                                 "}\n"
        #                                 "\n"
        #                                 "")
        # self.horizontalLayout_4.addWidget(self.pushButton_4)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_3.addLayout(self.verticalLayout)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem3)
        self.pushButton = QtWidgets.QPushButton(self.widget1)
        self.pushButton.clicked.connect(self.start)
        self.pushButton.setMinimumSize(QtCore.QSize(150, 100))
        self.pushButton.setMaximumSize(QtCore.QSize(150, 100))
        self.pushButton.setStyleSheet("QPushButton\n"
                                      "{\n"
                                      "    font: 12pt \'幼圆\'; \n"
                                      "    color:black;\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed\n"
                                      "{\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    color:black;\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "    padding-left:6px;\n"
                                      "    padding-top:6px;\n"
                                      "}\n"
                                      "\n"
                                      "")
        self.horizontalLayout_3.addWidget(self.pushButton)

        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem5)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget1)
        self.pushButton_2.clicked.connect(self.g)
        self.pushButton_2.setMinimumSize(QtCore.QSize(150, 100))
        self.pushButton_2.setMaximumSize(QtCore.QSize(150, 100))
        self.pushButton_2.setStyleSheet("QPushButton\n"
                                      "{\n"
                                      "    font: 12pt \'幼圆\'; \n"
                                      "    color:black;\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "\n"
                                      "}\n"
                                      "\n"
                                      "QPushButton:pressed\n"
                                      "{\n"
                                      "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
                                      "    color:black;\n"
                                      "    border:2px solid white;border-radius:10px;\n"
                                      "    padding-left:6px;\n"
                                      "    padding-top:6px;\n"
                                      "}\n"
                                      "\n"
                                      "")
        self.horizontalLayout_3.addWidget(self.pushButton_2)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem4)
        self.label_9 = QtWidgets.QLabel(self.widget1)
        self.label_9.setAlignment(Qt.AlignCenter)
        self.label_9.setMinimumSize(QtCore.QSize(100, 70))
        self.label_9.setMaximumSize(QtCore.QSize(16777215, 70))
        self.label_9.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                   "font: 10pt \"幼圆\";\n"
                                   "color:red")
        self.horizontalLayout_3.addWidget(self.label_9)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem6)
        # self.pushButton_3 = QtWidgets.QPushButton(self.widget1)
        # self.pushButton_3.clicked.connect(self.close)
        # self.pushButton_3.setMinimumSize(QtCore.QSize(120, 70))
        # self.pushButton_3.setMaximumSize(QtCore.QSize(120, 70))
        # self.pushButton_3.setStyleSheet("QPushButton\n"
        #                                 "{\n"
        #                                 "    font: 12pt \'幼圆\'; \n"
        #                                 "    color:black;\n"
        #                                 "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
        #                                 "    border:2px solid white;border-radius:10px;\n"
        #                                 "\n"
        #                                 "}\n"
        #                                 "\n"
        #                                 "QPushButton:pressed\n"
        #                                 "{\n"
        #                                 "    background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);\n"
        #                                 "    color:black;\n"
        #                                 "    border:2px solid white;border-radius:10px;\n"
        #                                 "    padding-left:6px;\n"
        #                                 "    padding-top:6px;\n"
        #                                 "}\n"
        #                                 "\n"
        #                                 "")
        # self.horizontalLayout_3.addWidget(self.pushButton_3)
        self.gridLayout_4.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.gridLayout_2.addWidget(self.widget1, 4, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_2, 0, 0, 1, 1)
        self.tabWidget.addTab(self.widget, "")
        #tag2
        self.widget2 = QtWidgets.QWidget()
        self.gridLayout_7 = QtWidgets.QGridLayout(self.widget2)
        self.his = QWebEngineView(self.widget2)
        self.channel1= QWebChannel()
        self.printer1 = Print1()
        self.printer1.changeList1.connect(self.getlist)
        self.channel1.registerObject('printer1', self.printer1)
        self.his.page().setWebChannel(self.channel1)
        self.his.load(QUrl("file:///./templete.html"))
        self.gridLayout_7.addWidget(self.his, 0, 0, 1, 1)
        self.tabWidget.addTab(self.widget2, "")
        #tag3
        self.widget3 = QtWidgets.QWidget()
        self.gridLayout_6 = QtWidgets.QGridLayout(self.widget3)
        self.frame = QtWidgets.QFrame(self.widget3)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.gridLayout_6.addWidget(self.frame, 0, 0, 1, 1)
        self.tabWidget.addTab(self.widget3, "")
        #tag4
        self.widget4 = QtWidgets.QWidget()
        self.gridLayout_5 = QtWidgets.QGridLayout(self.widget4)
        self.ech = QWebEngineView(self.widget4)
        self.channel = QWebChannel()
        self.printer = Print()
        self.printer.changeList.connect(self.getchange)
        self.channel.registerObject('printer', self.printer)
        self.ech.page().setWebChannel(self.channel)
        self.ech.load(QUrl("file:///./home.html"))
        self.gridLayout_5.addWidget(self.ech, 0, 0, 1, 1)
        self.tabWidget.addTab(self.widget4,"")
        #tag5
        self.widget5 = QtWidgets.QWidget()
        self.gridLayout_8 = QtWidgets.QGridLayout(self.widget5)
        self.his2 = QWebEngineView(self.widget5)
        self.channel2 = QWebChannel()  # 通信频道
        self.printer2 = Print2()  # 通信功能类
        self.printer2.changeList2.connect(self.get_hislist)
        self.channel2.registerObject('printer2', self.printer2)  # 标识
        self.his2.page().setWebChannel(self.channel2)
        self.his2.load(QUrl("file:///./history.html"))
        self.gridLayout_8.addWidget(self.his2, 0, 0, 1, 1)
        self.tabWidget.addTab(self.widget5,"")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)

        self.retranslateUi(self)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "安视LED灯检"))
        self.pushButton.setText(_translate("Form", "启动"))
        self.pushButton_2.setText(_translate("Form", "清除班次记录"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.widget), _translate("Form", "运行"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.widget2), _translate("Form", "模板档案"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.widget3), _translate("Form", "产品录入"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.widget4), _translate("Form", "图表分析"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.widget5), _translate("Form", "不良明细"))

    #退出全屏（已停用）
    def normal(self):
        form.showNormal()

    #全屏（已停用）
    def full(self):
        form.showFullScreen()

    #启动，停止
    def start(self):
        if self.Start == False:
            text = self.comboBox.currentText()
            if text != "请选择型号":
                self.label_8.setText('')
                self.label_9.setText('')
                self.label_4.setPixmap(QPixmap(''))
                self.label_5.setPixmap(QPixmap(''))
                self.label_6.setPixmap(QPixmap(''))
                self.label_7.setPixmap(QPixmap(''))
                session.query(Standard).filter(Standard.flag == 1).update({Standard.flag: 0}, synchronize_session=False)
                session.commit()
                session.query(Standard).filter(Standard.flag != 2, Standard.name == text).update({Standard.flag: 1}, synchronize_session=False)
                session.commit()
                self.label_10.setText("当前检测型号:" + text)
                self.Start = True
                self.pushButton.setText("停止")
                self.pushButton.setStyleSheet(
                    "background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);border: 2px solid red;border-radius: 10px;padding:3px;font: 12pt '幼圆';color:red}\n")
            else:
                query =session.query(Standard).filter(Standard.flag ==1).first()
                if query:
                    self.label_8.setText('')
                    self.label_9.setText('')
                    self.label_4.setPixmap(QPixmap(''))
                    self.label_5.setPixmap(QPixmap(''))
                    self.label_6.setPixmap(QPixmap(''))
                    self.label_7.setPixmap(QPixmap(''))
                    self.Start =True
                    self.pushButton.setText( "停止")
                    self.pushButton.setStyleSheet(
                        "background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);border: 2px solid red;border-radius: 10px;padding:3px;font: 12pt '幼圆';color:red}\n")
                else:
                    reply = QMessageBox.information(self, '信息', '请先选择型号!',
                                                    QMessageBox.Yes | QMessageBox.No)
        else:
            self.Start = False
            self.pushButton.setText("启动")
            self.pushButton.setStyleSheet(
                "background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);border: 1px solid #EDEDED ;border-radius: 10px;padding:3px;font: 12pt '幼圆';color:black}\n")

    #停止（已停用）
    def stop(self):
        self.Start =False
        self.pushButton.setStyleSheet(
            "background-color:qlineargradient(x1:0, y1:0, x2:0, y2:1, stop: 0 #E5E5E5, stop: 1 #B7B7B7);border: 1px solid #EDEDED ;border-radius: 10px;padding:3px;font: 12pt '幼圆';color:black}\n")

    #退出监听
    def closeEvent(self, event):
        pass

    #关机（已停用）
    def close(self):
        if self.Start == True:
            reply = QMessageBox.information(self, '信息', '请先停止运行',
                                                QMessageBox.Yes | QMessageBox.No)
        else:
            reply = QMessageBox.information(self, '信息', '请确认关机!',
                                            QMessageBox.Yes | QMessageBox.No)
            if reply == QMessageBox.Yes:
                os.system("shutdown -s -t  4 ")

    #切换tab
    def slot_small_tab(self):
        if self.tabWidget.currentIndex() == 0:
            self.t1.Flag = False
            self.timer.timeout.connect(self.change_today)
            self.timer.start(1000)
            names = session.query(Standard).filter(Standard.flag == 1).all()
            names = [x.to_dict() for x in names]
            if names != []:
                self.label_10.setText("当前检测型号："+names[0]["name"])
            else:
                self.label_10.setText("当前检测型号:")
            name = session.query(Standard.name).filter(Standard.flag != 2).all()
            name = [r for (r,) in name]
            self.comboBox.clear()
            self.comboBox.addItem('请选择型号')
            for i in name:
                self.comboBox.addItem(i)
        elif self.tabWidget.currentIndex() == 1:
            self.getlist('s')
            self.t1.Flag = False
            self.timer.stop()
        elif self.tabWidget.currentIndex() == 2:
            self.t1.Flag = False
            self.timer.stop()
        elif self.tabWidget.currentIndex() == 3:
            self.t1.Flag = True
            self.timer.stop()
            self.t1.breakSignal.connect(self.getchart)
            self.t1.start()
        else:
            self.get_hislist(['s','s'])
            self.t1.Flag = False
            self.timer.stop()

    #获取echarts数据
    def getchart(self,data):
        self.ech.page().runJavaScript("window.updata('{}')".format(json.dumps(data)))

    #首页数量统计
    def change_today(self):
        all,good,bad =get_today()
        self.label.setText("<font style = 'font-size:50px; color:white; font-weight:bold'>"+str(all)+"</font>"
                           "<br/>""<br/>"
                           "<font style = 'font-size:20px; color:white;'> 班次检测数 </font>")
        self.label_2.setText("<font style = 'font-size:50px; color:white; font-weight:bold'>"+str(good)+"</font>"
                             "<br/>""<br/>"
                             "<font style = 'font-size:20px; color:white;'> 班次合格数 </font>")
        self.label_3.setText("<font style = 'font-size:50px; color:white; font-weight:bold'>"+str(bad)+"</font>"
                             "<br/>""<br/>"
                             "<font style = 'font-size:20px; color:white;'> 班次次品数 </font>")

    #删除获取模板列表
    def getlist(self, e):
        if e.isdigit():
            session.query(Standard).filter(Standard.id == int(e)).update({Standard.flag: 2}, synchronize_session=False)
            session.commit()
            lists = session.query(Standard).filter(Standard.flag != 2).all()
            lists = [x.to_dict() for x in lists]
            self.his.page().runJavaScript("window.uptext('{}')".format(json.dumps(lists)))
        else:
            lists = session.query(Standard).filter(Standard.flag != 2,Standard.name.like("%" + e[1:] + "%")).all()
            lists = [x.to_dict() for x in lists]
            self.his.page().runJavaScript("window.uptext('{}')".format(json.dumps(lists)))

    #获取历史记录
    def get_hislist(self, e):
        lists = session.query(History).filter(History.standard_name.like("%" + e[0][1:] + "%"),History.types.like("%" + e[1][1:] + "%")).order_by(History.id.desc()).limit(200)
        lists = [x.to_dict() for x in lists]
        self.his2.page().runJavaScript("window.uptext('{}')".format(json.dumps(lists)))

    #修改检测模板（已停用）
    def change_standard(self):
        if self.Start == True:
            reply = QMessageBox.information(self, '信息', '请先停止运行',
                                            QMessageBox.Yes | QMessageBox.No)
        else:
            text = self.comboBox.currentText()
            if text != "请选择型号":
                session.query(Standard).filter(Standard.flag == 1).update({Standard.flag: 0}, synchronize_session=False)
                session.commit()
                session.query(Standard).filter(Standard.flag != 2, Standard.name == text).update({Standard.flag: 1}, synchronize_session=False)
                session.commit()
                self.label_10.setText("当前检测型号:" + text)
            else:
                pass

    #图表模糊搜索
    def getchange(self,e):
        self.t1.data =e[0]
        if e[1] =='' or e[1] ==None:
            self.t1.start_date =''
            self.t1.end_date =''
        else:
            date1 = datetime.datetime.strptime(e[1][0], "%Y-%m-%dT%H:%M:%S.%fZ")
            date2 = datetime.datetime.strptime(e[1][1], "%Y-%m-%dT%H:%M:%S.%fZ")
            self.t1.start_date =date1 + datetime.timedelta(days=1)
            self.t1.end_date =date2++ datetime.timedelta(days=1)

    #清除班次记录
    def g(self):
        res = session.query(Dailydata2).first()
        if res.goodNum != 0 or res.badNum != 0:
            reply = QMessageBox.information(self, '信息', '是否清除上一班次数据!',
                                            QMessageBox.Yes | QMessageBox.No)
            if reply == QMessageBox.Yes:
                session.query(Dailydata2).update(
                    {Dailydata2.badNum: 0, Dailydata2.goodNum: 0},
                    synchronize_session=False)
                session.commit()


@app.post('/error/')
async def error_mes(item:Item):
    form.label_9.setText(item.msg)
    t = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
    session.add(Alert(mes =item.msg,created_time=t))
    session.commit()
    return {"status":200}

@app.post('/result/')
async def result_mes(item:Item2):
    badNum = len(item.result)
    goodNum = item.total -badNum
    t = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
    t1 = time.strftime("%Y-%m-%d", time.localtime())
    result = defaultdict(lambda: defaultdict(list))
    final=[]
    if item.result !=[]:
        for items in item.result:
            session.add(History(standard_name=item.standard_name,types=items["class"],url1=items["image"],created_time=t))
            result[items['class']]['image'].append(items['image'])
            final = [{'class': name, **{inner_names: inner_values for inner_names, inner_values in values.items()}} for
                     name, values in result.items()]
        form.label_8.setText(str(final))
    else:
        form.label_8.setText('')
    data =session.query(Dailydata).filter(Dailydata.standard_name==item.standard_name,Dailydata.created_time ==t1).first()
    if data:
        session.query(Dailydata).filter(Dailydata.standard_name==item.standard_name,Dailydata.created_time ==t1).update({Dailydata.badNum: Dailydata.badNum + badNum, Dailydata.goodNum: Dailydata.goodNum + goodNum},
                 synchronize_session=False)
        session.query(Dailydata2).update({Dailydata2.badNum: Dailydata2.badNum + badNum, Dailydata2.goodNum: Dailydata2.goodNum + goodNum},
                 synchronize_session=False)
    else:
        session.add(Dailydata(standard_name=item.standard_name,badNum=badNum,goodNum=goodNum,created_time=t1))
        session.query(Dailydata2).update({Dailydata2.badNum: Dailydata2.badNum + badNum, Dailydata2.goodNum: Dailydata2.goodNum + goodNum},
                 synchronize_session=False)
    if final !=[]:
        for i in final:
            query = session.query(Baddata).filter(Baddata.created_time ==t1,Baddata.standard_name ==item.standard_name,Baddata.types ==i["class"]).first()
            if not query:
                session.add(Baddata(standard_name=item.standard_name,types=i["class"],Num=len(i["image"]),created_time=t1))
            else:
                session.query(Baddata).filter(Baddata.created_time ==t1,Baddata.standard_name ==item.standard_name,Baddata.types ==i["class"]).update({Baddata.Num: Baddata.Num+len(i["image"])}, synchronize_session=False)
    session.commit()
    return {"status":200}

@app.post('/imgs/')
async def get_imgs(item:Item1):
    for i in item.signal:
        for k, v in i.items():
            if int(k) ==1:
                form.label_4.setPixmap(QPixmap(v))
            elif int(k) == 2:
                form.label_5.setPixmap(QPixmap(v))
            elif int(k) == 3:
                form.label_6.setPixmap(QPixmap(v))
            else:
                form.label_7.setPixmap(QPixmap(v))
    return {"status":200}

def start_server():
    today = datetime.date.today()
    session.query(History).filter(History.created_time <= today - datetime.timedelta(days=30)).delete()
    session.commit()
    import uvicorn
    uvicorn.run(app=app,
                host="127.0.0.1",
                port=8081,
                workers=1)


server_thread=threading.Thread(target=start_server)
server_thread.setDaemon(True)
server_thread.start()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    form = Ui_Form()
    form.show()
    # form.setGeometry(0,0,1920,1080)
    # form.showFullScreen()
    sys.exit(app.exec_())